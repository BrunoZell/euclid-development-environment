---
- name: Check if metagraph-l0.jar exists
  stat:
    path: "/home/{{ ansible_user }}/code/metagraph-l0/metagraph-l0.jar"
  register: metagraph_l0_jar

- name: Throw an error if the file metagraph-l0.jar doesn't exist
  fail:
    msg: "File /home/{{ ansible_user }}/code/metagraph-l0/metagraph-l0.jar does not exist"
  when: not metagraph_l0_jar.stat.exists
     
- name: Check if token file exists
  stat:
    path: "/home/{{ ansible_user }}/code/metagraph-l0/{{ lookup('env', 'CL_KEYSTORE') }}"
  register: token_file

- name: Throw an error if the token_file doesn't exist
  fail:
    msg: "File /home/{{ ansible_user }}/code/metagraph-l0/{{ lookup('env', 'CL_KEYSTORE') }} does not exist"
  when: not token_file.stat.exists

- name: Start as validator
  shell: |
    cd "/home/{{ ansible_user }}/code/metagraph-l0"
    nohup java -jar metagraph-l0.jar run-validator --ip {{ ansible_host }} > metagraph-l0.log 2>&1 &

- name: Check if node is ReadyToJoin
  uri:
    url: "http://localhost:{{ base_metagraph_l0_public_port }}/node/info"
    method: GET
    return_content: yes
  register: response
  until: response.status == 200 and ("ReadyToJoin" in response.content | string or retries >= 100)
  retries: 120
  delay: 1
  vars:
    retries: 0

- name: Join Cluster
  uri:
    url: "http://localhost:{{ base_metagraph_l0_cli_port }}/cluster/join"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      id: "{{ METAGRAPH_L0_GENESIS_NODE_ID }}"
      ip: "{{ METAGRAPH_L0_GENESIS_NODE_IP }}"
      p2pPort: "{{ base_metagraph_l0_p2p_port }}"
    return_content: yes
  register: curl_output
  until: (curl_output.status == 200 or curl_output.status == 404) or retries >= 5
  retries: 5
  delay: 10
  vars:
    retries: 0